{"version":3,"sources":["views/Component/TitleComponent/TitleComponent.jsx","views/Component/DescriptionComponent/DescriptionComponent.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","views/Component/PokemonComponent/PokemonComponent.jsx","views/Container/PokemonOwned/PokemonOwned.jsx"],"names":["TitleComponent","props","style","color","this","colorTitle","textAlign","position","bottom","left","fontSize","fontSizeTitle","className","title_start","id","title_middle","title_end","React","Component","DescriptionComponent","description_text_color","description_text_align","fontWeight","font_weight","marginTop","description_margin_top","marginBottom","description_margin_bottom","paddingRight","description_padding_right","paddingLeft","description_padding_left","description_text","_toConsumableArray","arr","Array","isArray","i","arr2","length","iter","Symbol","iterator","Object","prototype","toString","call","from","TypeError","PokemonComponent","state","href","process","url","data_id","pokemon_text_color","backgroundColor","pokemon_color","margin","pokemon_name","pokemon_nickname","owned_total","type1","type2","number","src","PokemonOwned","getDataAPI","a","getInitalData","currentData","pokemonInPage","pokemonOwnedData","pokemonOwned","setState","map","data","pokemonData","pokemon_id","nickname","API","getPokemonSpeciesData","then","r","pokemonColor","name","getPokemonData","pokemonTypeList","types","type","charAt","toUpperCase","slice","sprites","obj","element","sort","b","res","textColor","undefined","speciesData","color_name","form","front_default","key","overflow","connect"],"mappings":"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","file":"static/js/7.fca67e69.chunk.js","sourcesContent":["import React from 'react';\r\nimport './TitleComponent.css';\r\nimport '../../../assets/fonts/style.css';\r\n\r\nclass TitleComponent extends React.Component {\r\n    constructor(props) {\r\n\t\tsuper(props);\r\n    }\r\n    render(){\r\n        const style = {\r\n            color: this.props.colorTitle,\r\n            textAlign: this.props.textAlign,\r\n            position: this.props.position,\r\n            bottom: this.props.bottom,\r\n            left: this.props.left,\r\n            fontSize: this.props.fontSizeTitle + 'rem'\r\n        }\r\n        \r\n        return(\r\n            <p className=\"title_start title_end\" style={style}>{this.props.title_start}<span id=\"x_pokemon\" className=\"title_middle\">{this.props.title_middle}</span>{this.props.title_end}</p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TitleComponent;","import React from 'react';\r\nimport './DescriptionComponent.css';\r\nimport '../../../assets/fonts/style.css';\r\n\r\nclass DescriptionComponent extends React.Component {\r\n    constructor(props) {\r\n\t\tsuper(props);\r\n    }\r\n    render(){\r\n        const style = {\r\n            color: this.props.description_text_color,\r\n            textAlign: this.props.description_text_align,\r\n            fontWeight: this.props.font_weight,\r\n            fontSize: this.props.fontSize,\r\n            marginTop: this.props.description_margin_top + '%',\r\n            marginBottom: this.props.description_margin_bottom + '%',\r\n            paddingRight: this.props.description_padding_right + '%',\r\n            paddingLeft: this.props.description_padding_left + '%'\r\n        }\r\n\r\n        return(\r\n            <p className=\"description\" style={style}>{this.props.description_text}</p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DescriptionComponent;","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import React, { Component, Fragment } from 'react';\r\nimport './PokemonComponent.css';\r\n\r\nclass PokemonComponent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n\r\n        }\r\n    }\r\n    componentDidMount(){\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <Fragment>\r\n                <a className=\"link-url\" href={process.env.PUBLIC_URL+`${this.props.url}${this.props.data_id}`} style={{color:this.props.pokemon_text_color}}>\r\n                    <div className=\"img-container\" style={{ backgroundColor:this.props.pokemon_color}}>\r\n                        <div className=\"row\" style={{margin:0}}>\r\n                            <div className=\"col-12 col-xs-6 col-md-6 \">\r\n                                <div className=\"position-relative h-100\">\r\n                                    <div className=\"pt-1 pr-1\">\r\n                                        <p className=\"pokemon-name\">{this.props.pokemon_name}</p>\r\n                                        {\r\n                                            this.props.pokemon_nickname !==\"\"?\r\n                                            <p className=\"pokemon-nickname\">{this.props.pokemon_nickname}</p>:\r\n                                            <p className=\"pokemon-nickname\">{this.props.owned_total} Owned</p>\r\n                                        }\r\n                                        {/* <p className=\"pokemon-nickname\">{this.props.pokemon_nickname}</p> */}\r\n                                    </div>\r\n                                    <div className=\"pokemon-type-box\">\r\n                                        <p className=\"pokemon-type\">{this.props.type1}</p>\r\n                                        <p className=\"pokemon-type\">{this.props.type2}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-12 col-xs-6 col-md-6\">\r\n                                <p className=\"pokemon-number\">#{this.props.number}</p>\r\n                                <img className=\"img\" src={this.props.src}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </a>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\nexport default PokemonComponent;","import React, { Component } from 'react';\r\nimport './PokemonOwned.css';\r\nimport PokemonComponent from '../../Component/PokemonComponent/PokemonComponent';\r\nimport TitleComponent from '../../Component/TitleComponent/TitleComponent';\r\nimport { connect } from 'react-redux';\r\nimport { getInitalData } from \"../../../redux/reducer/globalReducer\";\r\nimport API from \"../../../service\";\r\nimport DescriptionComponent from '../../Component/DescriptionComponent/DescriptionComponent';\r\n\r\nclass PokemonOwned extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentData: [],\r\n            pokemonInPage: 0\r\n        }\r\n    }\r\n    getDataAPI = async () => {\r\n        await this.props.getInitalData();\r\n    }\r\n    async componentDidMount() {\r\n        await this.getDataAPI();\r\n        let pokemonOwnedData = this.props.pokemonOwned;\r\n        this.setState({\r\n            pokemonInPage: pokemonOwnedData.length\r\n        })\r\n        pokemonOwnedData.map(data=>{\r\n            \r\n            let pokemonData = [];\r\n            let currentData = [...this.state.currentData];\r\n            let pokemon_id = data.pokemon_id;\r\n            let pokemon_nickname = data.nickname;\r\n            pokemonData['nickname'] = pokemon_nickname;\r\n            pokemonData['data_id'] = data.id;\r\n            API.getPokemonSpeciesData(pokemon_id).then(r=>{\r\n                let pokemonColor = r.color.name;\r\n                pokemonData['speciesData'] = r;\r\n                if(pokemonColor === 'black'){\r\n                    pokemonData['color'] = \"#303943\";\r\n                    pokemonData['textColor'] = \"white\";\r\n                }\r\n                else if(pokemonColor === 'blue'){\r\n                    pokemonData['color'] = \"#58abf6\";\r\n                    pokemonData['textColor'] = \"white\";\r\n                }\r\n                else if(pokemonColor === 'brown'){\r\n                    pokemonData['color'] = \"#CA8179\";\r\n                    pokemonData['textColor'] = \"white\";\r\n                }\r\n                else if(pokemonColor === 'gray'){\r\n                    pokemonData['color'] = \"#F5F5F5\";\r\n                    pokemonData['textColor'] = \"#818181\";\r\n                }\r\n                else if(pokemonColor === 'green'){\r\n                    pokemonData['color'] = \"#2CDAB1\";\r\n                    pokemonData['textColor'] = \"white\";\r\n                }\r\n                else if(pokemonColor === 'pink'){\r\n                    pokemonData['color'] = \"#FFB6C1\";\r\n                    pokemonData['textColor'] = \"#818181\";\r\n                }\r\n                else if(pokemonColor === 'purple'){\r\n                    pokemonData['color'] = \"#9F5BBA\";\r\n                    pokemonData['textColor'] = \"white\";\r\n                }\r\n                else if(pokemonColor === 'red'){\r\n                    pokemonData['color'] = \"#F7786B\";\r\n                    pokemonData['textColor'] = \"white\";\r\n                }\r\n                else if(pokemonColor === 'white'){\r\n                    pokemonData['color'] = \"white\";\r\n                    pokemonData['textColor'] = \"#818181\";\r\n                }\r\n                else if(pokemonColor === 'yellow'){\r\n                    pokemonData['color'] = \"#FFCE4B\";\r\n                    pokemonData['textColor'] = \"white\";\r\n                }\r\n            })\r\n            API.getPokemonData(pokemon_id).then(r =>{\r\n                let pokemonTypeList = r.types;\r\n                if(pokemonTypeList.length === 1){\r\n                    pokemonData['type1'] = pokemonTypeList[0].type.name.charAt(0).toUpperCase() + pokemonTypeList[0].type.name.slice(1);\r\n                    pokemonData['type2'] = \"\";\r\n                }\r\n                else{\r\n                    pokemonData['type1'] = pokemonTypeList[0].type.name.charAt(0).toUpperCase() + pokemonTypeList[0].type.name.slice(1);\r\n                    pokemonData['type2'] = pokemonTypeList[1].type.name.charAt(0).toUpperCase() + pokemonTypeList[1].type.name.slice(1);\r\n                }\r\n                pokemonData['form'] = r.sprites;\r\n                pokemonData['name'] = r.name.charAt(0).toUpperCase() + r.name.slice(1);\r\n                pokemonData['id'] = pokemon_id;\r\n                currentData = [...this.state.currentData, pokemonData];\r\n                this.setState({\r\n                    currentData: currentData\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const data = this.state.currentData;\r\n        let obj = [...data];\r\n        let element = [];\r\n        if(data.length === this.state.pokemonInPage){\r\n            obj.sort((a,b)=>a.data_id - b.data_id);\r\n            obj.map((res,i)=>{\r\n                let color = res.color;\r\n                let textColor = res.textColor;\r\n                if(color === undefined){\r\n                    if(res.speciesData !== undefined){\r\n                        let color_name = res.speciesData.color.name;\r\n                        if(color_name === 'black'){\r\n                            color = \"#303943\";\r\n                            textColor = \"white\";\r\n                        }\r\n                        else if(color_name === 'blue'){\r\n                            color = \"#58abf6\";\r\n                            textColor = \"white\";\r\n                        }\r\n                        else if(color_name === 'brown'){\r\n                            color = \"#CA8179\";\r\n                            textColor = \"white\";\r\n                        }\r\n                        else if(color_name === 'gray'){\r\n                            color = \"#F5F5F5\";\r\n                            textColor = \"#818181\";\r\n                        }\r\n                        else if(color_name === 'green'){\r\n                            color = \"#2CDAB1\";\r\n                            textColor = \"white\";\r\n                        }\r\n                        else if(color_name === 'pink'){\r\n                            color = \"#FFB6C1\";\r\n                            textColor = \"#818181\";\r\n                        }\r\n                        else if(color_name === 'purple'){\r\n                            color = \"#9F5BBA\";\r\n                            textColor = \"white\";\r\n                        }\r\n                        else if(color_name === 'red'){\r\n                            color = \"#F7786B\";\r\n                            textColor = \"white\";\r\n                        }\r\n                        else if(color_name === 'white'){\r\n                            color = \"white\";\r\n                            textColor = \"#818181\";\r\n                        }\r\n                        else if(color_name === 'yellow'){\r\n                            color = \"#FFCE4B\";\r\n                            textColor = \"white\";\r\n                        }\r\n                    }\r\n                }\r\n                else{\r\n                    color = res.color;\r\n                    textColor = res.textColor;\r\n                }\r\n                if(res!==[] && res.name !== undefined && res.id!==undefined && res.form.front_default!==undefined){\r\n                    element = [...element, <div className=\"col-lg-3 col-md-3 col-sm-4 col-6 mb-4\" key={i}>\r\n                        <PokemonComponent pokemon_nickname={res.nickname} pokemon_color={color} pokemon_text_color={textColor} pokemon_name={res.name} number={res.id} data_id={res.data_id} src={res.form.front_default} type1={res.type1} type2={res.type2} url=\"/owned/detail/\"/>\r\n                    </div>]\r\n                }\r\n            })\r\n            return (\r\n                <div style={{overflow:\"hidden\"}}>\r\n                    <div className=\"container-fluid\" style={{ backgroundColor: \"#2c2c2c\", paddingLeft: \"0\", paddingRight: \"0\" }}>\r\n                        <div id=\"my_pokemon_header\">\r\n                            <div className=\"p-2 content_pokemon_list_header rounded\" style={{backgroundColor:\"rgba(69,148,205,0.9)\"}}>\r\n                                <TitleComponent\r\n                                    title_middle=\"MY POKEMON\"\r\n                                />\r\n                                <DescriptionComponent\r\n                                    description_text=\"This is a list of every Pokemon you have catch.\"\r\n                                    description_text_color=\"white\"\r\n                                    description_padding_right=\"0\"\r\n                                    fontSize=\"1.5rem\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12 col-md-12 col-sm-x col-xs-x col-x px-3 pt-2 pb-3\" style={{ backgroundColor: \"#d1d1d1\" }}>\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row mt-5 mb-1\">\r\n                                        {\r\n                                            element\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div >\r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <div style={{overflow:\"hidden\"}}>\r\n                    <div className=\"container-fluid\" style={{ backgroundColor: \"#2c2c2c\", paddingLeft: \"0\", paddingRight: \"0\" }}>\r\n                        <div id=\"my_pokemon_header\">\r\n                            <div className=\"p-2 content_pokemon_list_header rounded\" style={{backgroundColor:\"rgba(69,148,205,0.9)\"}}>\r\n                                <TitleComponent\r\n                                    title_middle=\"MY POKEMON\"\r\n                                />\r\n                                <DescriptionComponent\r\n                                    description_text=\"This is a list of every Pokemon you have catch.\"\r\n                                    description_text_color=\"white\"\r\n                                    description_padding_right=\"0\"\r\n                                    fontSize=\"1.5rem\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div style={{color:\"white\"}} className=\"animated fadeIn pt-1 text-center\">Loading...</div>\r\n                    </div>\r\n                </div >\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => state,\r\n    { getInitalData }\r\n)(PokemonOwned);"],"sourceRoot":""}