{"version":3,"sources":["views/Component/TitleComponent/TitleComponent.jsx","views/Component/DescriptionComponent/DescriptionComponent.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","views/Component/PokemonComponent/PokemonComponent.jsx","views/Container/PokemonList/PokemonList.jsx"],"names":["TitleComponent","props","style","color","this","colorTitle","textAlign","position","bottom","left","fontSize","fontSizeTitle","className","title_start","id","title_middle","title_end","React","Component","DescriptionComponent","description_text_color","description_text_align","fontWeight","font_weight","marginTop","description_margin_top","marginBottom","description_margin_bottom","paddingRight","description_padding_right","paddingLeft","description_padding_left","description_text","_toConsumableArray","arr","Array","isArray","i","arr2","length","iter","Symbol","iterator","Object","prototype","toString","call","from","TypeError","PokemonComponent","state","href","url","data_id","pokemon_text_color","backgroundColor","pokemon_color","margin","pokemon_name","pokemon_nickname","owned_total","type1","type2","number","src","PokemonList","currentData","pageCount","prevButton","nextButton","number1Button","number2Button","number3Button","prevDisable","nextDisable","active1Button","active2Button","active3Button","getInitalData","pageNumber","parseInt","match","params","page","API","getPokemonSpeciesOffset","then","res","results","map","data","pokemonData","pokemonId","split","getPokemonOwnedCountID","cnt","getPokemonSpeciesData","r","pokemonColor","name","getPokemonData","pokemonTypeList","types","type","charAt","toUpperCase","slice","sprites","setState","Math","floor","count","obj","element","sort","a","b","console","log","undefined","form","front_default","textColor","key","overflow","disabled","connect"],"mappings":"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","file":"static/js/6.6b0d9218.chunk.js","sourcesContent":["import React from 'react';\r\nimport './TitleComponent.css';\r\nimport '../../../assets/fonts/style.css';\r\n\r\nclass TitleComponent extends React.Component {\r\n    constructor(props) {\r\n\t\tsuper(props);\r\n    }\r\n    render(){\r\n        const style = {\r\n            color: this.props.colorTitle,\r\n            textAlign: this.props.textAlign,\r\n            position: this.props.position,\r\n            bottom: this.props.bottom,\r\n            left: this.props.left,\r\n            fontSize: this.props.fontSizeTitle + 'rem'\r\n        }\r\n        \r\n        return(\r\n            <p className=\"title_start title_end\" style={style}>{this.props.title_start}<span id=\"x_pokemon\" className=\"title_middle\">{this.props.title_middle}</span>{this.props.title_end}</p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TitleComponent;","import React from 'react';\r\nimport './DescriptionComponent.css';\r\nimport '../../../assets/fonts/style.css';\r\n\r\nclass DescriptionComponent extends React.Component {\r\n    constructor(props) {\r\n\t\tsuper(props);\r\n    }\r\n    render(){\r\n        const style = {\r\n            color: this.props.description_text_color,\r\n            textAlign: this.props.description_text_align,\r\n            fontWeight: this.props.font_weight,\r\n            fontSize: this.props.fontSize,\r\n            marginTop: this.props.description_margin_top + '%',\r\n            marginBottom: this.props.description_margin_bottom + '%',\r\n            paddingRight: this.props.description_padding_right + '%',\r\n            paddingLeft: this.props.description_padding_left + '%'\r\n        }\r\n\r\n        return(\r\n            <p className=\"description\" style={style}>{this.props.description_text}</p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DescriptionComponent;","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import React, { Component, Fragment } from 'react';\r\nimport './PokemonComponent.css';\r\n\r\nclass PokemonComponent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n\r\n        }\r\n    }\r\n    componentDidMount(){\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <Fragment>\r\n                <a className=\"link-url\" href={`${this.props.url}${this.props.data_id}`} style={{color:this.props.pokemon_text_color}}>\r\n                    <div className=\"img-container\" style={{ backgroundColor:this.props.pokemon_color}}>\r\n                        <div className=\"row\" style={{margin:0}}>\r\n                            <div className=\"col-12 col-xs-6 col-md-6 \">\r\n                                <div className=\"position-relative h-100\">\r\n                                    <div className=\"pt-1 pr-1\">\r\n                                        <p className=\"pokemon-name\">{this.props.pokemon_name}</p>\r\n                                        {\r\n                                            this.props.pokemon_nickname !=\"\"?\r\n                                            <p className=\"pokemon-nickname\">{this.props.pokemon_nickname}</p>:\r\n                                            <p className=\"pokemon-nickname\">{this.props.owned_total} Owned</p>\r\n                                        }\r\n                                        {/* <p className=\"pokemon-nickname\">{this.props.pokemon_nickname}</p> */}\r\n                                    </div>\r\n                                    <div className=\"pokemon-type-box\">\r\n                                        <p className=\"pokemon-type\">{this.props.type1}</p>\r\n                                        <p className=\"pokemon-type\">{this.props.type2}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-12 col-xs-6 col-md-6\">\r\n                                <p className=\"pokemon-number\">#{this.props.number}</p>\r\n                                <img className=\"img\" src={this.props.src}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </a>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\nexport default PokemonComponent;","import React, { Component } from 'react';\r\nimport './PokemonList.css';\r\nimport PokemonComponent from '../../Component/PokemonComponent/PokemonComponent';\r\nimport TitleComponent from '../../Component/TitleComponent/TitleComponent';\r\nimport { connect } from 'react-redux';\r\nimport { getInitalData } from \"../../../redux/reducer/globalReducer\";\r\nimport API from \"../../../service\";\r\nimport DescriptionComponent from '../../Component/DescriptionComponent/DescriptionComponent';\r\n\r\nclass PokemonList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentData: [],\r\n            pageCount: 0,\r\n            prevButton: 0,\r\n            nextButton: 0,\r\n            number1Button: 0,\r\n            number2Button: 0,\r\n            number3Button: 0,\r\n            prevDisable: \"\",\r\n            nextDisable: \"\",\r\n            active1Button: \"\",\r\n            active2Button: \"\",\r\n            active3Button: \"\"\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.props.getInitalData();\r\n        let pageNumber = parseInt(this.props.match.params.page);\r\n        let page = pageNumber * 20;\r\n        API.getPokemonSpeciesOffset(page).then(res=>{\r\n            res.results.map(data=>{\r\n                let pokemonData = [];\r\n                let currentData = [...this.state.currentData];\r\n                \r\n                let pokemonId = data.url.split('/')[6];\r\n                API.getPokemonOwnedCountID(pokemonId).then(res=>{\r\n                    if(res.length == 0){\r\n                        pokemonData['owned_total'] = 0\r\n                    }\r\n                    else{\r\n                        pokemonData['owned_total'] = res[0].cnt\r\n                    }\r\n                })\r\n                API.getPokemonSpeciesData(pokemonId).then(r=>{\r\n                    let pokemonColor = r.color.name;\r\n                    if(pokemonColor == 'black'){\r\n                        pokemonData['color'] = \"#303943\";\r\n                        pokemonData['textColor'] = \"white\";\r\n                    }\r\n                    else if(pokemonColor == 'blue'){\r\n                        pokemonData['color'] = \"#58abf6\";\r\n                        pokemonData['textColor'] = \"white\";\r\n                    }\r\n                    else if(pokemonColor == 'brown'){\r\n                        pokemonData['color'] = \"#CA8179\";\r\n                        pokemonData['textColor'] = \"white\";\r\n                    }\r\n                    else if(pokemonColor == 'gray'){\r\n                        pokemonData['color'] = \"#F5F5F5\";\r\n                        pokemonData['textColor'] = \"#818181\";\r\n                    }\r\n                    else if(pokemonColor == 'green'){\r\n                        pokemonData['color'] = \"#2CDAB1\";\r\n                        pokemonData['textColor'] = \"white\";\r\n                    }\r\n                    else if(pokemonColor == 'pink'){\r\n                        pokemonData['color'] = \"#FFB6C1\";\r\n                        pokemonData['textColor'] = \"#818181\";\r\n                    }\r\n                    else if(pokemonColor == 'purple'){\r\n                        pokemonData['color'] = \"#9F5BBA\";\r\n                        pokemonData['textColor'] = \"white\";\r\n                    }\r\n                    else if(pokemonColor == 'red'){\r\n                        pokemonData['color'] = \"#F7786B\";\r\n                        pokemonData['textColor'] = \"white\";\r\n                    }\r\n                    else if(pokemonColor == 'white'){\r\n                        pokemonData['color'] = \"white\";\r\n                        pokemonData['textColor'] = \"#818181\";\r\n                    }\r\n                    else if(pokemonColor == 'yellow'){\r\n                        pokemonData['color'] = \"#FFCE4B\";\r\n                        pokemonData['textColor'] = \"white\";\r\n                    }\r\n                })\r\n                API.getPokemonData(pokemonId).then(r =>{\r\n                    let pokemonTypeList = r.types;\r\n                    if(pokemonTypeList.length == 1){\r\n                        pokemonData['type1'] = pokemonTypeList[0].type.name.charAt(0).toUpperCase() + pokemonTypeList[0].type.name.slice(1);\r\n                        pokemonData['type2'] = \"\";\r\n                    }\r\n                    else{\r\n                        pokemonData['type1'] = pokemonTypeList[0].type.name.charAt(0).toUpperCase() + pokemonTypeList[0].type.name.slice(1);\r\n                        pokemonData['type2'] = pokemonTypeList[1].type.name.charAt(0).toUpperCase() + pokemonTypeList[1].type.name.slice(1);\r\n                    }\r\n                    if(r.sprites != null){\r\n                        this.setState({\r\n                            pageCount: Math.floor(res.count/20)\r\n                        },()=>{\r\n                            if(pageNumber != 0 && pageNumber != this.state.pageCount){\r\n                                this.setState({\r\n                                    prevButton: pageNumber-1,\r\n                                    number1Button: pageNumber-1,\r\n                                    number2Button: pageNumber,\r\n                                    number3Button: pageNumber+1,\r\n                                    nextButton: pageNumber+1,\r\n                                    prevDisable: \"\",\r\n                                    nextDisable: \"\",\r\n                                    active1Button: \"\",\r\n                                    active2Button: \"active\",\r\n                                    active3Button: \"\"\r\n                                })\r\n                            }\r\n                            else if(pageNumber == 0){\r\n                                this.setState({\r\n                                    prevButton: 0,\r\n                                    number1Button: pageNumber,\r\n                                    number2Button: pageNumber+1,\r\n                                    number3Button: pageNumber+2,\r\n                                    nextButton: pageNumber+1,\r\n                                    prevDisable: \"disabled\",\r\n                                    active1Button: \"active\",\r\n                                    active2Button: \"\",\r\n                                    active3Button: \"\"\r\n                                })\r\n                            }\r\n                            else if(pageNumber == this.state.pageCount){\r\n                                this.setState({\r\n                                    prevButton: pageNumber-1,\r\n                                    number1Button: pageNumber-2,\r\n                                    number2Button: pageNumber-1,\r\n                                    number3Button: pageNumber,\r\n                                    nextButton: 0,\r\n                                    nextDisable: \"disabled\",\r\n                                    active1Button: \"\",\r\n                                    active2Button: \"\",\r\n                                    active3Button: \"active\"\r\n                                })\r\n                            }\r\n                        })\r\n                    }\r\n                    pokemonData['form'] = r.sprites;\r\n                    pokemonData['name'] = r.name.charAt(0).toUpperCase() + r.name.slice(1);\r\n                    pokemonData['id'] = pokemonId;\r\n                    pokemonData['data_id'] = pokemonId\r\n                    currentData = [...this.state.currentData, pokemonData];\r\n                    this.setState({\r\n                        currentData: currentData\r\n                    })\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const data = this.state.currentData;\r\n        let obj = [...data];\r\n        let element = [];\r\n        if(data.length != 0){\r\n            obj.sort((a,b)=>a.id - b.id);\r\n\r\n            obj.map((res,i)=>{\r\n                console.log(res.color)\r\n                if(res!=[] && res.name != undefined && res.id!=undefined && res.form.front_default!=undefined && res.color!= undefined && res.textColor != undefined){\r\n                    element = [...element, <div className=\"col-lg-3 col-md-3 col-sm-4 col-6 mb-4\" key={i}>\r\n                        <PokemonComponent pokemon_nickname=\"\" owned_total={res.owned_total} pokemon_color={res.color} pokemon_text_color={res.textColor} pokemon_name={res.name} data_id={res.data_id} number={res.id} src={res.form.front_default} type1={res.type1} type2={res.type2} url=\"../detail/\"/>\r\n                    </div>]\r\n                }\r\n            })\r\n            return (\r\n                <div style={{overflow:\"hidden\"}}>\r\n                    <div className=\"container-fluid\" style={{ backgroundColor: \"#2c2c2c\", paddingLeft: \"0\", paddingRight: \"0\" }}>\r\n                        <div id=\"pokemon_list_header\">\r\n                            <div className=\"p-2 content_pokemon_list_header rounded\" style={{backgroundColor:\"rgba(69,148,205,0.9)\"}}>\r\n                                <TitleComponent\r\n                                    title_middle=\"POKEMON LIST\"\r\n                                />\r\n                                <DescriptionComponent\r\n                                    description_text=\"This is a list of every Pokemon in this world.\"\r\n                                    description_text_color=\"white\"\r\n                                    description_padding_right=\"0\"\r\n                                    fontSize=\"1.5rem\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12 col-md-12 col-sm-x col-xs-x col-x px-3 pt-2 pb-3\" style={{ backgroundColor: \"#d1d1d1\" }}>\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row mt-5 mb-1\">\r\n                                        {\r\n                                            element\r\n                                        }\r\n                                    </div>\r\n                                    <div>\r\n                                        <ul className=\"pagination justify-content-center\"> \r\n                                            <li className={`page-item ${this.state.prevDisable}`}> \r\n                                                <a className=\"page-link\" href={`./${this.state.prevButton}`}>Previous</a> \r\n                                            </li> \r\n                                            <li className={`page-item ${this.state.active1Button}`}> \r\n                                                <a className=\"page-link\" href={`./${this.state.number1Button}`}>{this.state.number1Button}</a> \r\n                                            </li> \r\n                                            <li className={`page-item ${this.state.active2Button}`}> \r\n                                                <a className=\"page-link\" href={`./${this.state.number2Button}`}>{this.state.number2Button}</a> \r\n                                            </li> \r\n                                            <li className={`page-item ${this.state.active3Button}`}> \r\n                                                <a className=\"page-link\" href={`./${this.state.number3Button}`}>{this.state.number3Button}</a> \r\n                                            </li> \r\n                                            <li className={`page-item ${this.state.nextDisable}`}> \r\n                                                <a className=\"page-link\" href={`./${this.state.nextButton}`} disabled>Next</a> \r\n                                            </li> \r\n                                        </ul> \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div >\r\n            )\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => state,\r\n    { getInitalData }\r\n)(PokemonList);"],"sourceRoot":""}