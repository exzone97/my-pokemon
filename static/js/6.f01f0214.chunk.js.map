{"version":3,"sources":["views/Component/TitleComponent/TitleComponent.jsx","views/Component/DescriptionComponent/DescriptionComponent.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","views/Component/PokemonComponent/PokemonComponent.jsx","views/Container/PokemonList/PokemonList.jsx"],"names":["TitleComponent","props","style","color","this","colorTitle","textAlign","position","bottom","left","fontSize","fontSizeTitle","className","title_start","id","title_middle","title_end","React","Component","DescriptionComponent","description_text_color","description_text_align","fontWeight","font_weight","marginTop","description_margin_top","marginBottom","description_margin_bottom","paddingRight","description_padding_right","paddingLeft","description_padding_left","description_text","_toConsumableArray","arr","Array","isArray","i","arr2","length","iter","Symbol","iterator","Object","prototype","toString","call","from","TypeError","PokemonComponent","state","href","process","url","data_id","pokemon_text_color","backgroundColor","pokemon_color","margin","pokemon_name","pokemon_nickname","owned_total","type1","type2","number","src","PokemonList","getDataAPI","a","getInitalData","currentData","pageCount","prevButton","nextButton","number1Button","number2Button","number3Button","prevDisable","nextDisable","active1Button","active2Button","active3Button","pokemonOwned","pokemonInPage","document","title","pageNumber","parseInt","match","params","page","pokemonOwnedData","counts","arrayOfOwnedPokemon","map","data","pokemon_id","forEach","x","setState","API","getPokemonSpeciesOffset","then","res","results","pokemonData","pokemonId","split","undefined","getPokemonSpeciesData","r","pokemonColor","name","getPokemonData","pokemonTypeList","types","type","charAt","toUpperCase","slice","sprites","Math","floor","count","obj","element","sort","b","textColor","speciesData","color_name","form","front_default","key","overflow","disabled","connect"],"mappings":"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","file":"static/js/6.f01f0214.chunk.js","sourcesContent":["import React from 'react';\r\nimport './TitleComponent.css';\r\nimport '../../../assets/fonts/style.css';\r\n\r\nclass TitleComponent extends React.Component {\r\n    constructor(props) {\r\n\t\tsuper(props);\r\n    }\r\n    render(){\r\n        const style = {\r\n            color: this.props.colorTitle,\r\n            textAlign: this.props.textAlign,\r\n            position: this.props.position,\r\n            bottom: this.props.bottom,\r\n            left: this.props.left,\r\n            fontSize: this.props.fontSizeTitle + 'rem'\r\n        }\r\n        \r\n        return(\r\n            <p className=\"title_start title_end\" style={style}>{this.props.title_start}<span id=\"x_pokemon\" className=\"title_middle\">{this.props.title_middle}</span>{this.props.title_end}</p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TitleComponent;","import React from 'react';\r\nimport './DescriptionComponent.css';\r\nimport '../../../assets/fonts/style.css';\r\n\r\nclass DescriptionComponent extends React.Component {\r\n    constructor(props) {\r\n\t\tsuper(props);\r\n    }\r\n    render(){\r\n        const style = {\r\n            color: this.props.description_text_color,\r\n            textAlign: this.props.description_text_align,\r\n            fontWeight: this.props.font_weight,\r\n            fontSize: this.props.fontSize,\r\n            marginTop: this.props.description_margin_top + '%',\r\n            marginBottom: this.props.description_margin_bottom + '%',\r\n            paddingRight: this.props.description_padding_right + '%',\r\n            paddingLeft: this.props.description_padding_left + '%'\r\n        }\r\n\r\n        return(\r\n            <p className=\"description\" style={style}>{this.props.description_text}</p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DescriptionComponent;","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import React, { Component, Fragment } from 'react';\r\nimport './PokemonComponent.css';\r\n\r\nclass PokemonComponent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n\r\n        }\r\n    }\r\n    componentDidMount(){\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <Fragment>\r\n                <a className=\"link-url\" href={process.env.PUBLIC_URL+`${this.props.url}${this.props.data_id}`} style={{color:this.props.pokemon_text_color}}>\r\n                    <div className=\"img-container\" style={{ backgroundColor:this.props.pokemon_color}}>\r\n                        <div className=\"row\" style={{margin:0}}>\r\n                            <div className=\"col-12 col-xs-6 col-md-6 \" style={{textAlign:\"left\"}}>\r\n                                <div className=\"position-relative h-100\">\r\n                                    <div className=\"pt-1 pr-1\">\r\n                                        <p className=\"pokemon-name\">{this.props.pokemon_name}</p>\r\n                                        {\r\n                                            this.props.pokemon_nickname !==\"\"?\r\n                                            <p className=\"pokemon-nickname\">{this.props.pokemon_nickname}</p>:\r\n                                            <p className=\"pokemon-nickname\">{this.props.owned_total} Owned</p>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"pokemon-type-box\">\r\n                                        <p className=\"pokemon-type\">{this.props.type1}</p>\r\n                                        <p className=\"pokemon-type\">{this.props.type2}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-12 col-xs-6 col-md-6\">\r\n                                <p className=\"pokemon-number\">#{this.props.number}</p>\r\n                                <img className=\"img\" src={this.props.src}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </a>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\nexport default PokemonComponent;","import React, { Component } from 'react';\r\nimport './PokemonList.css';\r\nimport PokemonComponent from '../../Component/PokemonComponent/PokemonComponent';\r\nimport TitleComponent from '../../Component/TitleComponent/TitleComponent';\r\nimport { connect } from 'react-redux';\r\nimport { getInitalData } from \"../../../redux/reducer/globalReducer\";\r\nimport API from \"../../../service\";\r\nimport DescriptionComponent from '../../Component/DescriptionComponent/DescriptionComponent';\r\n\r\nclass PokemonList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentData: [],\r\n            pageCount: 0,\r\n            prevButton: 0,\r\n            nextButton: 0,\r\n            number1Button: 0,\r\n            number2Button: 0,\r\n            number3Button: 0,\r\n            prevDisable: \"\",\r\n            nextDisable: \"\",\r\n            active1Button: \"\",\r\n            active2Button: \"\",\r\n            active3Button: \"\",\r\n\r\n            pokemonOwned: [],\r\n            pokemonInPage: 0\r\n        }\r\n    }\r\n    getDataAPI = async () => {\r\n        await this.props.getInitalData();\r\n    }\r\n\r\n    async componentDidMount() {\r\n        document.title = 'Pokemon List'\r\n        await this.getDataAPI();\r\n        let pageNumber = parseInt(this.props.match.params.page);\r\n        let page = pageNumber * 20;\r\n        let pokemonOwnedData = this.props.pokemonOwned;\r\n\r\n        var counts = {};\r\n        let arrayOfOwnedPokemon = []\r\n        pokemonOwnedData.map(data=>{\r\n            arrayOfOwnedPokemon = [...arrayOfOwnedPokemon, data.pokemon_id]\r\n        })\r\n        arrayOfOwnedPokemon.forEach(function(x) { counts[x] = (counts[x] || 0)+1; });\r\n        this.setState({\r\n            pokemonOwned: counts\r\n        },()=>{\r\n            API.getPokemonSpeciesOffset(page).then(res=>{\r\n                this.setState({\r\n                    pokemonInPage: res.results.length\r\n                })\r\n                res.results.map(data=>{\r\n                    let pokemonData = [];\r\n                    let currentData = [...this.state.currentData];\r\n                    \r\n                    let pokemonId = data.url.split('/')[6];\r\n                    if(this.state.pokemonOwned[pokemonId]==undefined){\r\n                        pokemonData['owned_total'] = 0\r\n                    }\r\n                    else{\r\n                        pokemonData['owned_total'] = this.state.pokemonOwned[pokemonId]\r\n                    }\r\n                    API.getPokemonSpeciesData(pokemonId).then(r=>{\r\n                        let pokemonColor = r.color.name;\r\n                        pokemonData['speciesData'] = r;\r\n                        if(pokemonColor === 'black'){\r\n                            pokemonData['color'] = \"#303943\";\r\n                            pokemonData['textColor'] = \"white\";\r\n                        }\r\n                        else if(pokemonColor === 'blue'){\r\n                            pokemonData['color'] = \"#58abf6\";\r\n                            pokemonData['textColor'] = \"white\";\r\n                        }\r\n                        else if(pokemonColor === 'brown'){\r\n                            pokemonData['color'] = \"#CA8179\";\r\n                            pokemonData['textColor'] = \"white\";\r\n                        }\r\n                        else if(pokemonColor === 'gray'){\r\n                            pokemonData['color'] = \"#F5F5F5\";\r\n                            pokemonData['textColor'] = \"#818181\";\r\n                        }\r\n                        else if(pokemonColor === 'green'){\r\n                            pokemonData['color'] = \"#2CDAB1\";\r\n                            pokemonData['textColor'] = \"white\";\r\n                        }\r\n                        else if(pokemonColor === 'pink'){\r\n                            pokemonData['color'] = \"#FFB6C1\";\r\n                            pokemonData['textColor'] = \"#818181\";\r\n                        }\r\n                        else if(pokemonColor === 'purple'){\r\n                            pokemonData['color'] = \"#9F5BBA\";\r\n                            pokemonData['textColor'] = \"white\";\r\n                        }\r\n                        else if(pokemonColor === 'red'){\r\n                            pokemonData['color'] = \"#F7786B\";\r\n                            pokemonData['textColor'] = \"white\";\r\n                        }\r\n                        else if(pokemonColor === 'white'){\r\n                            pokemonData['color'] = \"white\";\r\n                            pokemonData['textColor'] = \"#818181\";\r\n                        }\r\n                        else if(pokemonColor === 'yellow'){\r\n                            pokemonData['color'] = \"#FFCE4B\";\r\n                            pokemonData['textColor'] = \"white\";\r\n                        }\r\n                    })\r\n                    API.getPokemonData(pokemonId).then(r =>{\r\n                        let pokemonTypeList = r.types;\r\n                        if(pokemonTypeList.length === 1){\r\n                            pokemonData['type1'] = pokemonTypeList[0].type.name.charAt(0).toUpperCase() + pokemonTypeList[0].type.name.slice(1);\r\n                            pokemonData['type2'] = \"\";\r\n                        }\r\n                        else{\r\n                            pokemonData['type1'] = pokemonTypeList[0].type.name.charAt(0).toUpperCase() + pokemonTypeList[0].type.name.slice(1);\r\n                            pokemonData['type2'] = pokemonTypeList[1].type.name.charAt(0).toUpperCase() + pokemonTypeList[1].type.name.slice(1);\r\n                        }\r\n                        if(r.sprites != null){\r\n                            this.setState({\r\n                                pageCount: Math.floor(res.count/20)\r\n                            },()=>{\r\n                                if(pageNumber !== 0 && pageNumber !== this.state.pageCount){\r\n                                    this.setState({\r\n                                        prevButton: pageNumber-1,\r\n                                        number1Button: pageNumber-1,\r\n                                        number2Button: pageNumber,\r\n                                        number3Button: pageNumber+1,\r\n                                        nextButton: pageNumber+1,\r\n                                        prevDisable: \"\",\r\n                                        nextDisable: \"\",\r\n                                        active1Button: \"\",\r\n                                        active2Button: \"active\",\r\n                                        active3Button: \"\"\r\n                                    })\r\n                                }\r\n                                else if(pageNumber === 0){\r\n                                    this.setState({\r\n                                        prevButton: 0,\r\n                                        number1Button: pageNumber,\r\n                                        number2Button: pageNumber+1,\r\n                                        number3Button: pageNumber+2,\r\n                                        nextButton: pageNumber+1,\r\n                                        prevDisable: \"disabled\",\r\n                                        active1Button: \"active\",\r\n                                        active2Button: \"\",\r\n                                        active3Button: \"\"\r\n                                    })\r\n                                }\r\n                                else if(pageNumber === this.state.pageCount){\r\n                                    this.setState({\r\n                                        prevButton: pageNumber-1,\r\n                                        number1Button: pageNumber-2,\r\n                                        number2Button: pageNumber-1,\r\n                                        number3Button: pageNumber,\r\n                                        nextButton: 0,\r\n                                        nextDisable: \"disabled\",\r\n                                        active1Button: \"\",\r\n                                        active2Button: \"\",\r\n                                        active3Button: \"active\"\r\n                                    })\r\n                                }\r\n                            })\r\n                        }\r\n                        pokemonData['form'] = r.sprites;\r\n                        pokemonData['name'] = r.name.charAt(0).toUpperCase() + r.name.slice(1);\r\n                        pokemonData['id'] = pokemonId;\r\n                        pokemonData['data_id'] = pokemonId\r\n                        currentData = [...this.state.currentData, pokemonData];\r\n                        this.setState({\r\n                            currentData: currentData\r\n                        })\r\n                    })\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const data = this.state.currentData;\r\n        let obj = data;\r\n        let element = [];\r\n        if(data.length === this.state.pokemonInPage){\r\n            obj.sort((a,b)=>a.id - b.id);\r\n            obj.map((res,i)=>{\r\n                let color = res.color;\r\n                let textColor = res.textColor;\r\n                if(color === undefined){\r\n                    if(res.speciesData !== undefined){\r\n                        let color_name = res.speciesData.color.name;\r\n                        if(color_name === 'black'){\r\n                            color = \"#303943\";\r\n                            textColor = \"white\";\r\n                        }\r\n                        else if(color_name === 'blue'){\r\n                            color = \"#58abf6\";\r\n                            textColor = \"white\";\r\n                        }\r\n                        else if(color_name === 'brown'){\r\n                            color = \"#CA8179\";\r\n                            textColor = \"white\";\r\n                        }\r\n                        else if(color_name === 'gray'){\r\n                            color = \"#F5F5F5\";\r\n                            textColor = \"#818181\";\r\n                        }\r\n                        else if(color_name === 'green'){\r\n                            color = \"#2CDAB1\";\r\n                            textColor = \"white\";\r\n                        }\r\n                        else if(color_name === 'pink'){\r\n                            color = \"#FFB6C1\";\r\n                            textColor = \"#818181\";\r\n                        }\r\n                        else if(color_name === 'purple'){\r\n                            color = \"#9F5BBA\";\r\n                            textColor = \"white\";\r\n                        }\r\n                        else if(color_name === 'red'){\r\n                            color = \"#F7786B\";\r\n                            textColor = \"white\";\r\n                        }\r\n                        else if(color_name === 'white'){\r\n                            color = \"white\";\r\n                            textColor = \"#818181\";\r\n                        }\r\n                        else if(color_name === 'yellow'){\r\n                            color = \"#FFCE4B\";\r\n                            textColor = \"white\";\r\n                        }\r\n                    }\r\n                }\r\n                else{\r\n                    color = res.color;\r\n                    textColor = res.textColor;\r\n                }\r\n                if(res.name !== undefined && res.id!==undefined && res.form.front_default!==undefined){\r\n                element = [...element, <div className=\"col-lg-3 col-md-3 col-sm-4 col-6 mb-4\" key={i}>\r\n                        <PokemonComponent pokemon_nickname=\"\" owned_total={res.owned_total} pokemon_color={color} pokemon_text_color={textColor} pokemon_name={res.name} data_id={res.data_id} number={res.id} src={res.form.front_default} type1={res.type1} type2={res.type2} url=\"/detail/\"/>\r\n                    </div>]\r\n                }\r\n            })\r\n            return (\r\n                <div style={{overflow:\"hidden\"}}>\r\n                    <div className=\"container-fluid\" style={{ backgroundColor: \"#2c2c2c\", paddingLeft: \"0\", paddingRight: \"0\" }}>\r\n                        <div id=\"pokemon_list_header\">\r\n                            <div className=\"p-2 content_pokemon_list_header rounded\" style={{backgroundColor:\"rgba(69,148,205,0.9)\"}}>\r\n                                <TitleComponent\r\n                                    title_middle=\"POKEMON LIST\"\r\n                                />\r\n                                <DescriptionComponent\r\n                                    description_text=\"This is a list of every Pokemon in this world.\"\r\n                                    description_text_color=\"white\"\r\n                                    description_padding_right=\"0\"\r\n                                    fontSize=\"1.5rem\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12 col-md-12 col-sm-x col-xs-x col-x px-3 pt-2 pb-3\" style={{ backgroundColor: \"#d1d1d1\" }}>\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row mt-5 mb-1\">\r\n                                        {\r\n                                            element\r\n                                        }\r\n                                    </div>\r\n                                    <div>\r\n                                        <ul className=\"pagination justify-content-center\"> \r\n                                            <li className={`page-item ${this.state.prevDisable}`}> \r\n                                                <a className=\"page-link\" href={process.env.PUBLIC_URL+`/list/${this.state.prevButton}`}>Previous</a> \r\n                                            </li> \r\n                                            <li className={`page-item ${this.state.active1Button}`}> \r\n                                                <a className=\"page-link\" href={process.env.PUBLIC_URL+`/list/${this.state.number1Button}`}>{this.state.number1Button}</a> \r\n                                            </li> \r\n                                            <li className={`page-item ${this.state.active2Button}`}> \r\n                                                <a className=\"page-link\" href={process.env.PUBLIC_URL+`/list/${this.state.number2Button}`}>{this.state.number2Button}</a> \r\n                                            </li> \r\n                                            <li className={`page-item ${this.state.active3Button}`}> \r\n                                                <a className=\"page-link\" href={process.env.PUBLIC_URL+`/list/${this.state.number3Button}`}>{this.state.number3Button}</a> \r\n                                            </li> \r\n                                            <li className={`page-item ${this.state.nextDisable}`}> \r\n                                                <a className=\"page-link\" href={process.env.PUBLIC_URL+`/list/${this.state.nextButton}`} disabled>Next</a> \r\n                                            </li> \r\n                                        </ul> \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div >\r\n            )\r\n        }\r\n        else{\r\n            \r\n            return (\r\n                <div style={{overflow:\"hidden\"}}>\r\n                    <div className=\"container-fluid\" style={{ backgroundColor: \"#2c2c2c\", paddingLeft: \"0\", paddingRight: \"0\" }}>\r\n                        <div id=\"pokemon_list_header\">\r\n                            <div className=\"p-2 content_pokemon_list_header rounded\" style={{backgroundColor:\"rgba(69,148,205,0.9)\"}}>\r\n                                <TitleComponent\r\n                                    title_middle=\"POKEMON LIST\"\r\n                                />\r\n                                <DescriptionComponent\r\n                                    description_text=\"This is a list of every Pokemon in this world.\"\r\n                                    description_text_color=\"white\"\r\n                                    description_padding_right=\"0\"\r\n                                    fontSize=\"1.5rem\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div style={{color:\"white\"}} className=\"animated fadeIn pt-1 text-center\">Loading...</div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => state,\r\n    { getInitalData }\r\n)(PokemonList);"],"sourceRoot":""}